{"version":3,"sources":["component/Welcome.js","lib/isAuth.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","props","Grid","container","item","direction","alignItems","justify","style","padding","minHeight","Typography","variant","Welcome","userType","localStorage","getItem","isAuth","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","history","useHistory","handleClick","location","console","log","push","AppBar","position","Toolbar","className","Button","color","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","type","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","inputBox","width","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","Logout","useEffect","removeItem","FileUploadInput","uploadTo","identifier","file","setFile","uploadPercentage","setUploadPercentage","xs","height","icon","display","files","name","InputProps","readOnly","FormData","append","Axios","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","statusText","handleUpload","disabled","CloudUpload","marginTop","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","substr","updatedDetails","trim","handleLogin","verified","handleLoginRecruiter","button","jobTileOuter","margin","boxSizing","popupDialog","justifyContent","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","minWidth","marginBottom","_id","Authorization","FilterPopup","searchOptions","setSearchOptions","getData","FormControlLabel","control","Checkbox","checked","fullTime","partTime","wfh","Slider","valueLabelDisplay","valueLabelFormat","marks","fullWidth","border","borderRadius","sort","for","desc","Home","setJobs","filterOpen","setFilterOpen","query","searchParams","asc","queryString","join","address","get","today","onKeyPress","ev","textAlign","statusBlock","textTransform","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","background","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","alignSelf","Profile","profileDetails","setProfileDetails","edu","onAdd","chip","onDelete","index","splice","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","MyJobs","avatar","colorSet","updateStatus","statusData","buttonSet","Avatar","src","jobApplicant","method","responseType","Blob","fileURL","URL","createObjectURL","window","getResume","JobApplications","useParams","all","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","paddingTop","createContext","App","popup","Provider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4db5a835.chunk.js","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\n\nconst Welcome = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Welcome to Job Portal</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport const ErrorPage = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Error 404</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Welcome;\n","const isAuth = () => {\n  return localStorage.getItem(\"token\");\n};\n\nexport const userType = () => {\n  return localStorage.getItem(\"type\");\n};\n\nexport default isAuth;\n","import {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport isAuth, { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const handleClick = (location) => {\n    console.log(location);\n    history.push(location);\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Job Portal\n        </Typography>\n        {isAuth() ? (\n          userType() === \"recruiter\" ? (\n            <>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\n                Home\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\n                Add Jobs\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\n                My Jobs\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\n                Employees\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\n                Profile\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\n                Home\n              </Button>\n              <Button\n                color=\"inherit\"\n                onClick={() => handleClick(\"/applications\")}\n              >\n                Applications\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\n                Profile\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\n                Logout\n              </Button>\n            </>\n          )\n        ) : (\n          <>\n            <Button color=\"inherit\" onClick={() => handleClick(\"/login\")}>\n              Login\n            </Button>\n            <Button color=\"inherit\" onClick={() => handleClick(\"/signup\")}>\n              Signup\n            </Button>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import { useState } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nconst PasswordInput = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\n        <InputLabel htmlFor=\"outlined-adornment-password\">\n          {props.label}\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={showPassword ? \"text\" : \"password\"}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={handleShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          value={props.value}\n          onChange={(event) => props.onChange(event)}\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\n          className={props.className}\n          onBlur={props.onBlur ? props.onBlur : null}\n        />\n        {props.helperText ? (\n          <FormHelperText>{props.helperText}</FormHelperText>\n        ) : null}\n      </FormControl>\n    </>\n  );\n};\n\nexport default PasswordInput;\n","import { TextField } from \"@material-ui/core\";\n\nconst EmailInput = (props) => {\n  const {\n    label,\n    value,\n    onChange,\n    inputErrorHandler,\n    handleInputError,\n    required,\n    className,\n  } = props;\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n      helperText={inputErrorHandler.email.message}\n      onBlur={(event) => {\n        if (event.target.value === \"\") {\n          if (required) {\n            handleInputError(\"email\", true, \"Email is required\");\n          } else {\n            handleInputError(\"email\", false, \"\");\n          }\n        } else {\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          if (re.test(String(event.target.value).toLowerCase())) {\n            handleInputError(\"email\", false, \"\");\n          } else {\n            handleInputError(\"email\", true, \"Incorrect email format\");\n          }\n        }\n      }}\n      error={inputErrorHandler.email.error}\n      className={className}\n    />\n  );\n};\n\nexport default EmailInput;\n","export const server = \"http://localhost:4444\";\n\nconst apiList = {\n    login: `/auth/login`,\n    signup: `/auth/signup`,\n    uploadResume: `/upload/resume`,\n    uploadProfileImage: `/upload/profile`,\n    jobs: `/api/jobs`,\n    applications: `/api/applications`,\n    rating: `/api/rating`,\n    user: `/api/user`,\n    applicants: `/api/applicants`,\n};\n\nexport default apiList;","import { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Login\n          </Typography>\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n","import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","import { useState, useContext } from \"react\";\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport Axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst FileUploadInput = (props) => {\n  const setPopup = useContext(SetPopupContext);\n\n  const { uploadTo, identifier, handleInput } = props;\n\n  const [file, setFile] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const handleUpload = () => {\n    console.log(file);\n    const data = new FormData();\n    data.append(\"file\", file);\n    Axios.post(uploadTo, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        setUploadPercentage(\n          parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          )\n        );\n      },\n    })\n      .then((response) => {\n        console.log(response.data);\n        handleInput(identifier, response.data.url);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.statusText,\n          //   message: err.response.data\n          //     ? err.response.data.message\n          //     : err.response.statusText,\n        });\n      });\n  };\n\n  return (\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\n      <Grid container item xs={12} spacing={0}>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {props.icon}\n            <input\n              type=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(event) => {\n                console.log(event.target.files);\n                setUploadPercentage(0);\n                setFile(event.target.files[0]);\n              }}\n              // onChange={onChange}\n              // onChange={\n              //   (e) => {}\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\n              // }\n            />\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label={props.label}\n            value={file ? file.name || \"\" : \"\"}\n            InputProps={{\n              readOnly: true,\n            }}\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            onClick={() => handleUpload()}\n            disabled={file ? false : true}\n          >\n            <CloudUpload />\n          </Button>\n        </Grid>\n      </Grid>\n      {uploadPercentage !== 0 ? (\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default FileUploadInput;\n","import { useState, useContext } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    console.log(education);\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\">\n            Signup\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <MultifieldInput\n              education={education}\n              setEducation={setEducation}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (.pdf)\"\n                icon={<DescriptionIcon />}\n                // value={files.resume}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     resume: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Profile Photo (.jpg/.png)\"\n                icon={<FaceIcon />}\n                // value={files.profileImage}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     profileImage: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadProfileImage}\n                handleInput={handleInput}\n                identifier={\"profile\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n          >\n            Signup\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Login;\n\n// {/* <Grid item>\n//           <PasswordInput\n//             label=\"Re-enter Password\"\n//             value={signupDetails.tmpPassword}\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\n//             className={classes.inputBox}\n//             labelWidth={140}\n//             helperText={inputErrorHandler.tmpPassword.message}\n//             error={inputErrorHandler.tmpPassword.error}\n//             onBlur={(event) => {\n//               if (event.target.value !== signupDetails.password) {\n//                 handleInputError(\n//                   \"tmpPassword\",\n//                   true,\n//                   \"Passwords are not same.\"\n//                 );\n//               }\n//             }}\n//           />\n//         </Grid> */}\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const handleApply = () => {\n    console.log(job._id);\n    console.log(sop);\n    axios\n      .post(\n        `${apiList.jobs}/${job._id}/applications`,\n        {\n          sop: sop,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const deadline = new Date(job.deadline).toLocaleDateString();\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\n          <Grid item>Application Deadline : {deadline}</Grid>\n\n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"recruiter\"}\n          >\n            Apply\n          </Button>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Write SOP (upto 250 words)\"\n            multiline\n            rows={8}\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\n            variant=\"outlined\"\n            value={sop}\n            onChange={(event) => {\n              if (\n                event.target.value.split(\" \").filter(function (n) {\n                  return n != \"\";\n                }).length <= 250\n              ) {\n                setSop(event.target.value);\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(\n          response.data.filter((obj) => {\n            const today = new Date();\n            const deadline = new Date(obj.deadline);\n            return deadline > today;\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\">Jobs</Typography>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n        {/* <Grid item>\n          <Pagination count={10} color=\"primary\" />\n        </Grid> */}\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(application.job.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n  const joinedOn = new Date(application.dateOfJoining);\n\n  const fetchRating = () => {\n    axios\n      .get(`${apiList.rating}?id=${application.job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setRating(response.data.rating);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, jobId: application.job._id },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        fetchRating();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        fetchRating();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{application.job.title}</Typography>\n          </Grid>\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\n          <Grid item>Role : {application.job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {application.job.duration !== 0\n              ? `${application.job.duration} month`\n              : `Flexible`}\n          </Grid>\n          <Grid item>\n            {application.job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\n          ) : null}\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Paper\n              className={classes.statusBlock}\n              style={{\n                background: colorSet[application.status],\n                color: \"#ffffff\",\n              }}\n            >\n              {application.status}\n            </Paper>\n          </Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.statusBlock}\n                onClick={() => {\n                  fetchRating();\n                  setOpen(true);\n                }}\n              >\n                Rate Job\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst Applications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.applications, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Applications</Typography>\n      </Grid>\n      <Grid\n        container\n        item\n        xs\n        direction=\"column\"\n        style={{ width: \"100%\" }}\n        alignItems=\"stretch\"\n        justify=\"center\"\n      >\n        {applications.length > 0 ? (\n          applications.map((obj) => (\n            <Grid item>\n              <ApplicationTile application={obj} />\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n            No Applications Found\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Applications;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (.pdf)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\n\n      {/* </Modal> */}\n    </>\n  );\n};\n\nexport default Profile;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    maxApplicants: 100,\n    maxPositions: 30,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: \"Full Time\",\n    duration: 0,\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: \"\",\n          maxApplicants: 100,\n          maxPositions: 30,\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: \"Full Time\",\n          duration: 0,\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Add Job</Typography>\n        </Grid>\n        <Grid item container xs direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Paper\n              style={{\n                padding: \"20px\",\n                outline: \"none\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    onChange={(event) =>\n                      handleInput(\"title\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput(\"jobType\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Duration\"\n                    variant=\"outlined\"\n                    value={jobDetails.duration}\n                    onChange={(event) => {\n                      handleInput(\"duration\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value={0}>Flexible</MenuItem>\n                    <MenuItem value={1}>1 Month</MenuItem>\n                    <MenuItem value={2}>2 Months</MenuItem>\n                    <MenuItem value={3}>3 Months</MenuItem>\n                    <MenuItem value={4}>4 Months</MenuItem>\n                    <MenuItem value={5}>5 Months</MenuItem>\n                    <MenuItem value={6}>6 Months</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput(\"salary\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput(\"deadline\", event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Maximum Number Of Applicants\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxApplicants}\n                    onChange={(event) => {\n                      handleInput(\"maxApplicants\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Positions Available\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxPositions}\n                    onChange={(event) => {\n                      handleInput(\"maxPositions\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateJobs;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n  const postedOn = new Date(job.dateOfPosting);\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\n          <Grid item>\n            Remaining Number of Positions:{\" \"}\n            {job.maxPositions - job.acceptedCandidates}\n          </Grid>\n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n            >\n              View Applications\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpenUpdate(true);\n              }}\n              style={{\n                background: \"#FC7A1E\",\n                color: \"#fff\",\n              }}\n            >\n              Update Details\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Delete Job\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleDelete()}\n              >\n                Delete\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleClose()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n            <Grid item>\n              <TextField\n                label=\"Application Deadline\"\n                type=\"datetime-local\"\n                value={jobDetails.deadline.substr(0, 16)}\n                onChange={(event) => {\n                  handleInput(\"deadline\", event.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Maximum Number Of Applicants\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxApplicants}\n                onChange={(event) => {\n                  handleInput(\"maxApplicants\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Positions Available\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxPositions}\n                onChange={(event) => {\n                  handleInput(\"maxPositions\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst MyJobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [`myjobs=1`];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\">My Jobs</Typography>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} getData={getData} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default MyJobs;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfApplication\"\n                    checked={searchOptions.sort.dateOfApplication.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfApplication\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfApplication\">\n                    <Typography>Date of Application</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfApplication.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            desc: !searchOptions.sort.dateOfApplication.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfApplication.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${server}${application.jobApplicant.resume}`;\n      console.log(address);\n      axios(address, {\n        method: \"GET\",\n        responseType: \"blob\",\n      })\n        .then((response) => {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          const fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        })\n        .catch((error) => {\n          console.log(error);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error\",\n          });\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    applied: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"shortlisted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    shortlisted: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    rejected: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    accepted: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    cancelled: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"cancelled\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    finished: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            Education:{\" \"}\n            {application.jobApplicant.education\n              .map((edu) => {\n                return `${edu.institutionName} (${edu.startYear}-${\n                  edu.endYear ? edu.endYear : \"Ongoing\"\n                })`;\n              })\n              .join(\", \")}\n          </Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {buttonSet[application.status]}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            // onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst JobApplications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n\n    if (searchOptions.status.rejected) {\n      searchParams = [...searchParams, `status=rejected`];\n    }\n    if (searchOptions.status.applied) {\n      searchParams = [...searchParams, `status=applied`];\n    }\n    if (searchOptions.status.shortlisted) {\n      searchParams = [...searchParams, `status=shortlisted`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}?jobId=${jobId}`;\n    if (queryString !== \"\") {\n      address = `${address}&${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Applications</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default JobApplications;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          {/* <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid> */}\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"jobTitle\"\n                    checked={searchOptions.sort[\"job.title\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"jobTitle\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"jobTitle\">\n                    <Typography>Job Title</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"job.title\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            desc: !searchOptions.sort[\"job.title\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"job.title\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfJoining\"\n                    checked={searchOptions.sort.dateOfJoining.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfJoining\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfJoining\">\n                    <Typography>Date of Joining</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfJoining.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            desc: !searchOptions.sort.dateOfJoining.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfJoining.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, applicantId: application.jobApplicant.userId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${server}${application.jobApplicant.resume}`;\n      console.log(address);\n      axios(address, {\n        method: \"GET\",\n        responseType: \"blob\",\n      })\n        .then((response) => {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          const fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        })\n        .catch((error) => {\n          console.log(error);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error\",\n          });\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleCloseEndJob();\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n        handleCloseEndJob();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Job Title: {application.job.title}</Grid>\n          <Grid item>Role: {application.job.jobType}</Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {/* {buttonSet[application.status]} */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                background: \"#09BC8A\",\n              }}\n              onClick={() => {\n                setOpenEndJob(true);\n              }}\n            >\n              End Job\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Rate Applicant\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openEndJob}\n        onClose={handleCloseEndJob}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => {\n                  updateStatus(\"finished\");\n                }}\n              >\n                Yes\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseEndJob()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst AcceptedApplicants = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      \"job.title\": {\n        status: false,\n        desc: false,\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Employees</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AcceptedApplicants;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n  return (\n    <BrowserRouter>\n      <SetPopupContext.Provider value={setPopup}>\n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route exact path=\"/employees\">\n                <AcceptedApplicants />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}